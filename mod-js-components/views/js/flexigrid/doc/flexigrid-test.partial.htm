<!-- Partial Template: TestUnit.FlexiGrid -->
<b>Data Grid - Loading <font color="#FF5500">async data with pagination</font> from a sample SQLite3 database</b> (based on FlexiGrid, with some fixes and improvements)
<br>
<link rel="stylesheet" type="text/css" href="modules/mod-js-components/views/js/flexigrid/flexigrid.css">
<script type="text/javascript" src="modules/mod-js-components/views/js/flexigrid/flexigrid.js"></script>
<table id="flex1"></table>
<script type="text/javascript">
$(function() {

	// Sample Flexigrid JS

	function FlexiSample_ActionHandler(com, grid) {

		if(com == 'Delete') {

			if($('.trSelected', grid).length > 0) {

				   if(confirm('Delete ' + $('.trSelected', grid).length + ' items ?')) {

						var items = $('.trSelected', grid);
						var itemlist = '';
						for(i=0; i<items.length; i++){
							itemlist += items[i].id.substr(3)+"\n";
						} //end for

						//alert(itemlist);
						/*
						$.ajax({
							type: "POST",
							dataType: "json",
							url: TESTUNIT_BASE_URL + 'testunit.json-sqlite3-flexi',
							data: "page=del_id="+itemlist,
							success: function(data) {
								alert("Query: "+data.query+" - Total affected rows: "+data.total);
								$("#flex1").flexReload();
							}
						});
						*/

						$('.trSelected', grid).remove();

				} //end if

			} else {

				return false;

			} //end if else

		} else if(com == 'Add') {

			alert('Add New Item Action ...');

			$('#flex1').flexReload();

		} //end if else

	} //END FUNCTION


	function FlexiSample_sort_Alpha(com) { // this is just for letter buttons
		//--
		jQuery('#flex1').flexOptions({
			newp: 1,
			params: [
					{ name: 'flexigrid_xsearch', value: com },
					{ name: 'flexigrid_xsrcby', value: 'name' },
			//		{ name: 'flexigrid_qtype2', value: $('select[name=qtype]').val() }
			]
		});
		//--
		jQuery("#flex1").flexReload();
		//--
	} //END FUNCTION


	//$("#flex1").flexOptions({params:[{name:'param1', value: val1}, {name:'param2', value: val2}]});
	$("#flex1").flexigrid({
		url: TESTUNIT_BASE_URL + 'testunit.json-sqlite3-flexi',
		params: [ // Extra URL Parameters
		//	{ name: 'op', value: 'testunit.json-sqlite3-flexi' }
		// ,{ name: 'extra', value: 'some-value' }
		],
		method: 'POST',
		dataType : 'json',
		colModel : [
		//	{display: 'ID', name : 'id', width : 40, sortable : true, align: 'center'},
			{display: 'ISO', name : 'iso', width : 75, sortable : true, align: 'center'},
			{display: 'Name', name : 'name', width : 400, sortable : true, align: 'left'},
			{display: 'Printable Name', name : 'printable_name', width : 200, sortable : true, align: 'left', hide: true},
			{display: 'ISO Ext.', name : 'iso3', width : 100, sortable : true, align: 'left'},
			{display: 'Number Code', name : 'numcode', width : 125, sortable : true, align: 'right'}
		],
		buttons : [
			{name: 'Add', bclass: 'add', onpress : FlexiSample_ActionHandler},
			{name: 'Delete', bclass: 'delete', onpress : FlexiSample_ActionHandler},
			{separator: true},
			{name: '#', onpress: FlexiSample_sort_Alpha},
			{name: 'A', onpress: FlexiSample_sort_Alpha},
			{name: 'B', onpress: FlexiSample_sort_Alpha},
			{name: 'C', onpress: FlexiSample_sort_Alpha},
			{name: 'D', onpress: FlexiSample_sort_Alpha},
			{name: 'E', onpress: FlexiSample_sort_Alpha},
			{name: 'F', onpress: FlexiSample_sort_Alpha},
			{name: 'G', onpress: FlexiSample_sort_Alpha},
			{name: 'H', onpress: FlexiSample_sort_Alpha},
			{name: 'I', onpress: FlexiSample_sort_Alpha},
			{name: 'J', onpress: FlexiSample_sort_Alpha},
			{name: 'K', onpress: FlexiSample_sort_Alpha},
			{name: 'L', onpress: FlexiSample_sort_Alpha},
			{name: 'M', onpress: FlexiSample_sort_Alpha},
			{name: 'N', onpress: FlexiSample_sort_Alpha},
			{name: 'O', onpress: FlexiSample_sort_Alpha},
			{name: 'P', onpress: FlexiSample_sort_Alpha},
			{name: 'Q', onpress: FlexiSample_sort_Alpha},
			{name: 'R', onpress: FlexiSample_sort_Alpha},
			{name: 'S', onpress: FlexiSample_sort_Alpha},
			{name: 'T', onpress: FlexiSample_sort_Alpha},
			{name: 'U', onpress: FlexiSample_sort_Alpha},
			{name: 'V', onpress: FlexiSample_sort_Alpha},
			{name: 'W', onpress: FlexiSample_sort_Alpha},
			{name: 'X', onpress: FlexiSample_sort_Alpha},
			{name: 'Y', onpress: FlexiSample_sort_Alpha},
			{name: 'Z', onpress: FlexiSample_sort_Alpha}
		],
		searchitems : [
			{ display : 'ISO', name : 'iso' },
			{ display : 'Name', name : 'name', isdefault : true },
			{ display : 'ISO3', name : 'iso3' },
			{ display : 'NumCode', name : 'numcode'}
		],
		procmsg: 'Loading data, please wait ...',
		sortname : "iso",
		sortorder : "asc",
		usepager : true,
		useRp : true,
		rp : 10,
		title : 'Countries',
		width : 750,
		height : 300,
		showToggleBtn: true,
		showTableToggleBtn : true
	});

});
</script>
<!-- #END :: Partial Template: TestUnit.FlexiGrid -->